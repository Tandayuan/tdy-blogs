import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as a,d as e,f as t}from"./app-040d6999.js";const c={},r=t(`<h1 id="项目代码风格统一-eslint、prettier-vscode" tabindex="-1"><a class="header-anchor" href="#项目代码风格统一-eslint、prettier-vscode" aria-hidden="true">#</a> 项目代码风格统一：eslint、prettier + VSCode</h1><h2 id="操作版本" tabindex="-1"><a class="header-anchor" href="#操作版本" aria-hidden="true">#</a> 操作版本</h2><blockquote><p>npm 7.21.1 node 16.9.1</p><p>&quot;@babel/core&quot;: &quot;^7.12.16&quot; &quot;@babel/eslint-parser&quot;: &quot;^7.12.16&quot; &quot;eslint&quot;: &quot;^7.32.0&quot; &quot;eslint-config-prettier&quot;: &quot;^8.3.0&quot;</p><p>&quot;eslint-plugin-prettier&quot;: &quot;^4.0.0&quot; &quot;eslint-plugin-vue&quot;: &quot;^8.0.3&quot; &quot;prettier&quot;: &quot;^2.4.1&quot; &quot;husky&quot;: &quot;^8.0.3&quot;</p><p>&quot;lint-staged&quot;: &quot;^13.1.2&quot;</p></blockquote><h2 id="npm依赖包" tabindex="-1"><a class="header-anchor" href="#npm依赖包" aria-hidden="true">#</a> npm依赖包</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i @babel/eslint-parser @babel/core eslint eslint-config-prettier eslint-plugin-prettier eslint-plugin-vue prettier -D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vscode插件" tabindex="-1"><a class="header-anchor" href="#vscode插件" aria-hidden="true">#</a> VSCode插件</h2><p><code>ESLint</code>：ESLint插件在编辑器中高亮显示和修复支持文件类型的错误（需要项目中安装eslint包）；</p><p><code>Vetur</code>：vue文件语法高亮、配合ESLint插件在编辑器中高亮显示和修复vue文件的错误；</p><h2 id="vscode配置文件-组合eslint、vetur插件保存后lint和fix代码" tabindex="-1"><a class="header-anchor" href="#vscode配置文件-组合eslint、vetur插件保存后lint和fix代码" aria-hidden="true">#</a> VSCode配置文件（组合ESLint、Vetur插件保存后lint和fix代码）</h2><p><code>根目录/.vscode/settings.json</code>，如无手动新建。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// 保存开启代码格式化</span>
    <span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;source.fixAll&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 默认的编辑器格式化代码工具指定：eslint；结合eslint-plugin-prettier插件使用，在保存的时候还会自动调用本地npm包里的prettier的格式化代码命令；</span>
    <span class="token property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dbaeumer.vscode-eslint&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 与Vetur高亮错误提示结合，开启后Eslint的报错可视化反馈在编辑器。</span>
    <span class="token property">&quot;eslint.enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// eslint去验证的文件</span>
    <span class="token property">&quot;eslint.validate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;javascriptreact&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;vue&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// eslint控制台显示信息</span>
    <span class="token property">&quot;eslint.trace.server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;verbose&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 关闭vetur插件自带的vue的template代码校验，交给本地eslint+prettier校验。</span>
    <span class="token property">&quot;vetur.validation.template&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// 关闭vetur代码格式化功能，交给本地eslint+prettier校验。</span>
    <span class="token property">&quot;vetur.format.enable&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目配置eslint-prettier" tabindex="-1"><a class="header-anchor" href="#项目配置eslint-prettier" aria-hidden="true">#</a> 项目配置ESLint + Prettier</h2><p><code>根目录/.eslintrc</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;plugin:vue/essential&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;plugin:prettier/recommended&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;@babel/eslint-parser&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;prettier/prettier&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 末尾不加分号</span>
                <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 单引号</span>
                <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// 代码缩进4个单位</span>
                <span class="token literal-property property">useTabs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 缩进单位：空格</span>
                <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 换行符自动判断，兼容不同代码环境。 crlf win lf mac</span>
                <span class="token literal-property property">htmlWhitespaceSensitivity</span><span class="token operator">:</span> <span class="token string">&#39;ignore&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 忽略html标签中的空格存在</span>
                <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token comment">// 单行代码总数超过120个字符就换行</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;no-unused-vars&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 不检查方法未使用的参数</span>
        <span class="token string-property property">&#39;no-console&#39;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;no-debugger&#39;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="忽略lint某个路径-文件配置" tabindex="-1"><a class="header-anchor" href="#忽略lint某个路径-文件配置" aria-hidden="true">#</a> 忽略lint某个路径/文件配置：</h3><p><code>根目录/.eslintignore</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>build<span class="token comment">/*.js
src/assets
public
dist
vue.config.js
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="上传vscode配置文件到git" tabindex="-1"><a class="header-anchor" href="#上传vscode配置文件到git" aria-hidden="true">#</a> 上传VSCode配置文件到Git</h2><p><code>根目录/.gitignore</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.vscode/*
!.vscode/settings.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><ul><li><p>VSCode保存文件后即可出现解决不了的错误(需要手动修复)和自动修复可以解决的错误。</p></li><li><p>其他编辑器在命令行操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx eslint <span class="token parameter variable">--ext</span> .js,.vue <span class="token parameter variable">--fix</span> .<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>views<span class="token punctuation">\\</span>Report<span class="token punctuation">\\</span>testview.vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="husky-lintstaged规范化暂存区代码" tabindex="-1"><a class="header-anchor" href="#husky-lintstaged规范化暂存区代码" aria-hidden="true">#</a> husky+lintstaged规范化暂存区代码</h2><h3 id="安装npm包" tabindex="-1"><a class="header-anchor" href="#安装npm包" aria-hidden="true">#</a> 安装npm包</h3>`,24),u={href:"https://typicode.github.io/husky/getting-started.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.npmjs.com/package/lint-staged",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i husky lint-staged <span class="token parameter variable">-D</span>
npx husky <span class="token function">install</span> // 生成本地husky目录，存储git钩子脚本。
<span class="token function">npm</span> pkg <span class="token builtin class-name">set</span> <span class="token assign-left variable">scripts.prepare</span><span class="token operator">=</span><span class="token string">&quot;husky install&quot;</span> // scripts中添加<span class="token string">&quot;prepare&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;husky install&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试husky的pre-commit钩子执行npm-test脚本" tabindex="-1"><a class="header-anchor" href="#测试husky的pre-commit钩子执行npm-test脚本" aria-hidden="true">#</a> 测试husky的pre commit钩子执行<code>npm test</code>脚本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/pre-commit <span class="token string">&quot;npm test&quot;</span> // 编写pre commit脚本,git commit提交触发执行<span class="token variable"><span class="token variable">\`</span><span class="token function">npm</span> <span class="token builtin class-name">test</span><span class="token variable">\`</span></span>脚本
<span class="token function">git</span> <span class="token function">add</span> .husky/pre-commit
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Keep calm and commit&quot;</span> // 如果 <span class="token function">npm</span> <span class="token builtin class-name">test</span> 命令失败，您的提交将自动中止，代表测试通过。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写lint-staged脚本-交给husky执行。" tabindex="-1"><a class="header-anchor" href="#编写lint-staged脚本-交给husky执行。" aria-hidden="true">#</a> 编写lint-staged脚本，交给husky执行。</h3><ul><li>编写lint-staged脚本：</li></ul><p><code>根目录/.lintstagedrc</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;src/**/*.{vue,js}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint --ext .vue,.js --fix&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 如果插入在pre-commit脚本，lintstaged检索暂存区符合src/**/*.{vue,js}条件的文件执行数组中的eslint脚本。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>package.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lint-staged&quot;</span> <span class="token comment">// 执行.lintstagedrc文件中的脚本</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>husky写入lint-staged脚本：<code>根目录/.husky/pre-commit</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env sh</span>
<span class="token builtin class-name">.</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> -- <span class="token string">&quot;<span class="token variable">$0</span>&quot;</span><span class="token variable">)</span></span>/_/husky.sh&quot;</span>

<span class="token comment">## npm test</span>
<span class="token function">npm</span> run lint-staged
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试husky的pre-commit钩子执行npm-run-lint-staged脚本" tabindex="-1"><a class="header-anchor" href="#测试husky的pre-commit钩子执行npm-run-lint-staged脚本" aria-hidden="true">#</a> 测试husky的pre commit钩子执行<code>npm run lint-staged</code>脚本</h3><ul><li>暂存区中存放一个没有格式化的文件<code>test1.vue</code>，add区中存在一个没有格式化的文件<code>test2.js</code></li><li>执行git commit操作</li><li>成功条件：<code>test1.vue</code>被格式化后提交成功或者控制台显示lint报错信息后提交失败，<code>test2.js</code>没有变化。</li></ul><blockquote><p><strong>ps: 如果test1.vue格式化后的文件与作出修改前一致会出现不允许empty commit的报错</strong></p><p>建议修改lint-staged脚本，只让脚本lint代码，不让脚本修复代码防止以上错误出现：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;src/**/*.{vue,js}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint --ext .vue,.js&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 如果插入在pre-commit脚本，lintstaged检索暂存区符合src/**/*.{vue,js}条件的文件执行数组中的eslint脚本。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,14);function v(m,b){const s=o("ExternalLinkIcon");return i(),l("div",null,[r,n("p",null,[n("a",u,[a("husky文档"),e(s)])]),n("p",null,[n("a",d,[a("lint-staged文档"),e(s)])]),k])}const q=p(c,[["render",v],["__file","VSCode配置代码校验、格式化和修复.html.vue"]]);export{q as default};
