import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as p,a as n,b as s,d as e,f as t}from"./app-f4ba14bb.js";const c={},r=t(`<h1 id="webpack5打包gzip配合nginx运行" tabindex="-1"><a class="header-anchor" href="#webpack5打包gzip配合nginx运行" aria-hidden="true">#</a> webpack5打包gzip配合nginx运行</h1><h2 id="先决条件" tabindex="-1"><a class="header-anchor" href="#先决条件" aria-hidden="true">#</a> 先决条件</h2><ul><li>linux环境安装有nginx，并且可以正常运行。</li><li>vue-cli5 + webpack5的操作环境。</li></ul><h2 id="webpack5配置" tabindex="-1"><a class="header-anchor" href="#webpack5配置" aria-hidden="true">#</a> webpack5配置</h2><ul><li><p>下载压缩gzip格式插件<code>npm i compression-webpack-plugin -D</code></p></li><li><p><code>vue.config.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Prepare compressed versions of assets to serve them with Content-Encoding.</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> CompressionPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;compression-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token function">chainWebpack</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token comment">// 生成.gz格式的打包文件；配合nginx的gzip识别功能，大幅压缩包体积大小加快请求速度。</span>
       config
           <span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">&#39;compression-plugin&#39;</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>CompressionPlugin<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$|\\.html$|\\.css</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span> <span class="token literal-property property">deleteOriginalAssets</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="nginx服务器配置-假设服务器已正常运行前端项目资源" tabindex="-1"><a class="header-anchor" href="#nginx服务器配置-假设服务器已正常运行前端项目资源" aria-hidden="true">#</a> nginx服务器配置（假设服务器已正常运行前端项目资源）</h2>`,6),u={href:"https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html",target:"_blank",rel:"noopener noreferrer"},d=n("li",null,[s("服务器上nginx配置："),n("code",null,"gzip_static on;")],-1),m=n("li",null,[n("code",null,"gzip_static on;"),s("个人理解：优先识别和运行项目目录下.gz结尾的包，没有的按正常文件形式运行。")],-1),g=n("h2",{id:"win11上安装linux和运行nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#win11上安装linux和运行nginx","aria-hidden":"true"},"#"),s(" win11上安装linux和运行nginx")],-1),k=n("code",null,"WSL",-1),v=n("code",null,"Ubuntu",-1),h={href:"https://learn.microsoft.com/zh-cn/windows/wsl/install",target:"_blank",rel:"noopener noreferrer"},b=t("<li><p><code>Ubuntu</code>安装<code>nginx</code>命令：</p><ul><li><code>sudo add-apt-repository ppa:nginx/stable</code></li><li><code>sudo apt-get update</code></li><li><code>sudo apt-get install -y nginx</code></li></ul></li><li><p>启动<code>nginx</code>命令：</p><ul><li><code>sudo service nginx start</code></li><li>win11浏览器运行<code>http://localhost</code>查看nginx默认html页面显示出来代表启动成功。</li></ul></li>",2),x={href:"https://juejin.cn/post/6956145078612000776",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"nginx本地开发配置和gzip运行项目-重点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx本地开发配置和gzip运行项目-重点","aria-hidden":"true"},"#"),s(" nginx本地开发配置和gzip运行项目(重点)")],-1),f=n("p",null,"参考大佬文章：",-1),w={href:"https://segmentfault.com/a/1190000041492323",target:"_blank",rel:"noopener noreferrer"},z={href:"https://segmentfault.com/a/1190000041492323#item-0-15",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.runoob.com/linux/linux-vim.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://blog.csdn.net/ouyangk1026/article/details/125300749",target:"_blank",rel:"noopener noreferrer"},L=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/nginx/
<span class="token function">sudo</span> <span class="token function">vim</span> nginx.conf
<span class="token comment"># nginx.conf参照上文\`nginx服务器配置\`,配置好了保存退出。</span>
<span class="token builtin class-name">cd</span> conf.d/
<span class="token function">sudo</span> <span class="token function">touch</span> front.conf
<span class="token function">sudo</span> <span class="token function">vim</span> front.conf 
<span class="token comment"># front.conf中插入以下配置:</span>
server <span class="token punctuation">{</span>
 listen <span class="token number">8080</span><span class="token punctuation">;</span>
 server_name localhost<span class="token punctuation">;</span>
 location / <span class="token punctuation">{</span>
  root /usr/share/nginx/dist<span class="token punctuation">;</span>
  index index.html<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment"># end 保存退出</span>
<span class="token comment"># 前端项目打包好的dist文件夹及它的文件复制一份到/usr/share/nginx路径下</span>
<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-r</span> /mnt/d/mgsoft-leasing-platform/vue-element-admin-master/dist/ /usr/share/nginx/
<span class="token comment"># 重启nginx</span>
<span class="token function">sudo</span> nginx <span class="token parameter variable">-s</span> reload
<span class="token comment"># 访问浏览器查看效果：http://localhost:8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>验证gzip是否开启：访问项目-&gt;F12-网络-&gt;单击大于1kb的js文件的标头</p></li><li><p><code>app.hash.js</code>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>响应标头：
Content-Encoding: gzip
请求标头：
Accept-Encoding: gzip, deflate, br
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>都包含gzip说明nginx成功配置了gzip！</p></li></ul>`,2);function C(W,E){const a=o("ExternalLinkIcon");return l(),p("div",null,[r,n("ul",null,[n("li",null,[s("相关配置说明文档："),n("a",u,[s("Module ngx_http_gzip_static_module"),e(a)])]),d,m]),g,n("ul",null,[n("li",null,[n("p",null,[s("配置运行环境：win11"),k,s("的Linux发行版本系统"),v,s("（WSL的安装参照"),n("a",h,[s("微软相关文档"),e(a)]),s("）")])]),b,n("li",null,[n("p",null,[s("以上步骤参考大佬文章"),n("a",x,[s("如何在 Windows 10 中使用WSL安装 Nginx"),e(a)])])])]),_,n("ul",null,[n("li",null,[f,n("p",null,[s("["),n("a",w,[s("Nginx前端入门"),e(a)]),s("]("),n("a",z,[s("https://segmentfault.com/a/1190000041492323#item-0-15"),e(a)]),s(")")]),n("p",null,[n("a",y,[s("Linux vi/vim"),e(a)])]),n("p",null,[n("a",j,[s("将Windows系统中文件传入WSL子系统中"),e(a)])])])]),L])}const q=i(c,[["render",C],["__file","webpack5打包gzip配合nginx运行.html.vue"]]);export{q as default};
